/*
For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL.
*/

/* Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
) */

/* Then I inserted the Spotify Data .csv into the table.
Next, I explored the data using the following SQL.
*/

SELECT *
FROM Spotifydata;

--Most popular artist & track?
SELECT
artist_name
, track_name
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 1;

--AVG popularity, danceability, and energy by artist and track. 
SELECT
artist_name
, track_name
, avg(popularity)
, avg(danceability)
, avg(energy)
FROM spotifydata
GROUP BY artist_name
         , track_name;

--Best danceability score by artist & track?
SELECT
artist_name
, track_name
, danceability
FROM Spotifydata
GROUP BY artist_name
ORDER BY danceability DESC
LIMIT 1;

--Who are the top 10 artists based on popularity?
SELECT 
artist_name
, track_name
, popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

--What artist released the longest song?
SELECT
artist_name
, duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;


/*
Calculate the average popularity for the artists in the table.
Then, for every artist with an average popularity of 90 or above, you need to show their name, their average popularity, and label them as a “Top Star”.
How would you do this using a CTE? 
*/
WITH popularity_average_CTE AS (
SELECT S.artist_name,
AVG(S.popularity) AS average_popularity
FROM SpotifyData AS S
GROUP BY S.artist_name
)

SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90
ORDER BY average_popularity DESC;
